// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package candidate.api;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "kalix/annotations.proto";

service CandidateService {
  option (kalix.codegen) = {
    event_sourced_entity: {
      name: "candidate.domain.Candidate"
      entity_type: "candidates"
      state: "candidate.domain.CandidateState"
      events: [
        "candidate.domain.CandidateCreated",
        "candidate.domain.CandidateNameUpdated",
        "candidate.domain.CandidateVoted"
      ]
    }
  };

  rpc Create(AddCandidateCommand) returns (CandidateResponse) {
    option (google.api.http) = {
      post: "/candidate/create"
      body: "*"
    };
  }

  rpc GetCandidateFromId(GetCandidateFromIdRequest) returns (Candidate) {
    option (google.api.http) = {
      get: "/candidate/{candidate_id}"
    };
  }

  rpc ChangeName(ChangeNameCommand) returns (CandidateResponse) {
    option (google.api.http) = {
      put: "/candidate/{candidate_id}/change/name"
      body: "*"
    };
  }

  rpc VoteForCandidate(VoteCommand) returns (CandidateResponse) {
    option (google.api.http) = {
      post: "/candidate/{candidate_id}/vote"
    };
  }
}

message AddCandidateCommand {
  string candidate_id = 1 [(kalix.field).entity_key = true];
  string region = 2;
  string name = 3;
  int32 votes = 4;
}

message Candidate {
  string candidate_id = 1 [(kalix.field).entity_key = true];
  string region = 2;
  string name = 3;
  int32 votes = 4;
}

message GetCandidateFromIdRequest {
  string candidate_id = 1 [(kalix.field).entity_key = true];
}

message ChangeNameCommand {
  string candidate_id = 1 [(kalix.field).entity_key = true];
  string new_name = 2;
}

message CandidateResponse {
  string reply = 1;
}

message VoteCommand {
  string candidate_id = 1 [(kalix.field).entity_key = true];
}